----------------------bash tips---------------------------
catching user input:
    1. using the "read" built-in command
        read with echo and printf
        read [options] NAME1 NAME2 ......NAMEN
----------------------------------------------------------

----------------------lazarus tips------------------------
1. TTimer:
    is TTimer still add Interval when Execute?
        test result: TTimer still add clock
2. 当定时器刷新界面时弹出界面挂掉
    还是没有解决
----------------------------------------------------------

----------------------makefile tips-----------------------

----------------------------------------------------------

----------------------gdb tips----------------------------
command:
    help
    run
    break file:row
    step/next
    print val || print/x val
    watch
----------------------------------------------------------

----------------------vim tips----------------------------
restart:
    :so 
        :so %
        :so ~/.vimrc

shared clipboard:
    edit $MYVIMRC 
        set clipboard=unnamed;
        set clipboard+=unnamed;
map:
    map F4 to print data & time
    :inoremap <F4> <C-R>=strftime("%c")<CR>

auto refresh:
    " 设置当文件被改动时自动载入
    set autoread
    write set autoread in $MYVIMRC but it doesn't work
    it just work for gVim but not terminal
    set:
    :au CursorHold,CursorHoldI * checktime

vim gcc link opencv:
		exec "!g++ -fPIC -L/DF_Vision_SDK/linuxbin % -o %<  -lopencv_imgproc -lopencv_calib3d -lopencv_contrib -lopencv_core -lopencv_features2d -lopencv_flann -lopencv_gpu -lopencv_highgui -lopencv_legacy -lopencv_ml -lopencv_nonfree -lopencv_objdetect -lopencv_ocl -lopencv_photo -lopencv_stitching -lopencv_superres -lopencv_ts -lopencv_video -lopencv_videostab"

set marks:
    command without ":" that m+mark symbol; example: ma, mb, mc;
    and use ` to switch to marks: `+ mark symbol; `a,`b, `c;
----------------------------------------------------------

----------------------programs----------------------------
packed/aligned structure:
    ubuntu c/c++ same structure with free pascal but not
    same size,
        sizeof(c/c++) = 60 | sizeof(free pascal) = 64
    maybe structure aligned with diff byte

pascal TCanvas createHandle bug:(wait)

lazarus rely on pkg:
    TSeriPort(pl_pascalSCADA) has change need rebuild
    compiler package about pl_pascalSCADA and OK

pascal TComboBox cause bug:
    1. Main form create and free combobox(without Tstrings) form succeed
    2. add tstrings just fine
    3. call dlib cb to show and hide typecast
       TComboBox with items(add in Object Inspecter||source) typecast 
       TComboBox without items  
    4. free form fail
    5. change fcl and lcl to lazarus 1.6 and fpc3.0 over

pascal gui pragom create console:

gtk2 show image can you transf, offset, mirror, and roi:
    function TGtk2WidgetSet.StretchCopyArea

    TCanvas.Draw(X,Y: Integer; SrcGraphic: TGraphic);
        get the DestRect and call StretchDraw
    TCanvas.StretchDraw(const DestRect: TRect; SrcGraphic: TGraphic); 
        SrcGraphic Draw
    TGraphic.Draw(ACanvas: TCanvas; const Rect: TRect);virtual;
    TRasterImage.Draw(DestCanvas: TCanvas; const DestRect: TRect);overide;
    StretchMaskBlt(TWidgetSet.StretchMaskBlt) export to diff UI structure
        gdk_window_copy_area
        procedure gdk_draw_drawable(drawable:PGdkDrawable; 
                                    gc:PGdkGC; src:PGdkDrawable; xsrc:gint;
                                    ysrc:gint; xdest:gint; ydest:gint; 
                                    width:gint; height:gint); 
                                    cdecl; external gdklib;  
        DstDevContext.Drawable, 
        DstDevContext.GC, 
        X, 
        Y,
        SrcDrawable, 
        XSrc, 
        YSrc, 
        Width, 
        Height

Geometric Transformation:
    Geometric tranformation:
        is any "bijection" of a "set" having some geometric structure
        to itself or another such set.


why gtk and else GUI not supported gray image
    1. gtk 24bit image is 4 channel
    2. same color image canvas.draw has difference time
        ///////////////////////////////////////////////
        grayTime:3.906403
        colorTime:190.585059
        allTime:194.51528
        ///////////////////////////////////////////////
        grayTime:4.173624
        colorTime:185.424886
        allTime:189.620188
        ///////////////////////////////////////////////
        grayTime:3.152875
        colorTime:153.781447
        allTime:156.964283
        ///////////////////////////////////////////////
        grayTime:4.529219
        colorTime:196.169126
        allTime:200.720613
        ///////////////////////////////////////////////
        grayTime:4.259519
        colorTime:185.500574
        allTime:189.792568
        ///////////////////////////////////////////////

inline:
    inline function not spent less time obvious

tools:
    tmux:
        1. close current pane:<C-a> + !
----------------------------------------------------------

----------------------script------------------------------
auto create project directory bash: create_proj.sh:
    create_proj.sh -name(-n) proj_name
    app_name
        configure
        tool
        system(linux, windows)
            bin
            sdk
            plugin
    proj_bin
    document
    resource
    test
    ----extension
    proj_plugin
    proj_sdk
    proj_tool
    1. create file directory in current directory
        mkdir file_name
    2. get user input command
        catching user input key word (read)
----------------------------------------------------------

----------------------temp--------------------------------
load image(jpg, bmp, png ...... gif):
    use opencv show image, load gif
    1. set opencv static rely
    2. test gif file tyoe
    3. gui and cle designed
----------------------------------------------------------

----------------------English-----------------------------
built-in: 內置
counterpart:回應 
----------------------------------------------------------

----------------------linux-------------------------------
give execute permission to your script:
    :chmod +x /path/to/yourscript.sh
    now you can run script with :/path/to/yourscript.sh 

search library path:
    first in the paths of the environment variable LD_LIBRARY_PATH
    then in /lib
    then /usr/lib
    finally the paths of /etc/ld.so.conf
    when change the ld.so.conf or ld.so.conf.d/*.conf file need 
        sudo ldconfig//cache the ld.so.conf to ld.cache then 
        library and path already note
    export LD_LIBRARY_PATH=/path
    echo $LD_LIBRARY_PATH

change application search and ico:
    vim appname.desktop// /usr/share/application
    cp appname.desktop tp ~/.local/share/applications/
    mv ico image to ~/.local/share/icons/hicolor/
    but on left languch still no change

image process tools:
    1. ImageMagick(convert)
    1.1 change image format: example: *.jpeg *.bmp
    1.2 convert to gray image: 
        convert -type Grayscale "src.image" "dst.image"
----------------------------------------------------------

----------------------opencv------------------------------
linux opencv cvLoadImage(filename, 1) load png fail:
    cvLoadImage always supported:
        bmp, dib, pbm, pgm, ppm, sr, ras;
    see the notes section:
        jpeg, jpg, jpe, png, tiff, tif
    note section:
    1. The function determines the type of an image by the content not by extension
----------------------------------------------------------

-------------------------Daily----------------------------
constructure procedure abstract
    什么是抽象？
    组合总结和构造， 对比， 总结？
    apt install mit-scheme
    configure vim for sicp
install MIT-Scheme
configure vim for sicp
    In a nutshell, I’m going to describe where to get SICP, which Scheme interpreter to use, and how to send snippets of code from Vim to a REPL running in a different tmux pane using tslime. For what it’s worth, I’m using OS X 10.9.4, but I think things should work equally well on Linux. Windows folks, good luck!
    1. SICP
    2. scheme: Racket racket -i -p neil/sicp -l xrepl
    3. vim
    4. tslime
    5. tmux
    6. REPL
    note:http://crash.net.nz/
    follow and read all tools
SICP
2016-09-18 日 08:38 上午
1. c++ load dynamic library
2. view the df-console code
2016-09-18 日 08:46 上午
1. 未定义引用：
    dlopen: 引用头文件但是没有静态载入静态库
    use -ldl include libdl.so shared library
gcc command:
    gcc + -fPIC -L/library/path/.. source-files -o output-files -lxx -lxx2 -llibraries
    gcc编译时对"xxxx"未定义的引用问题：
    gcc现将源码编译为.o文件，没有语法错误，然后进行链接出现未定义引用问题。
    dso.cpp:(.text+0x3c)：对‘dlopen’未定义的引用
    dso.cpp:(.text+0x4c)：对‘dlsym’未定义的引用
    dso.cpp:(.text+0xb5)：对‘dlerror’未定义的引用
    dso.cpp:(.text+0x13e)：对‘dlclose’未定义的引用

    出现这种情况的原因，主要是C/C++
    编译为obj文件的时候并不需要函数的具体实现，只要有函数的原型即可。
    但是在链接为可执行文件的时候就必须要具体的实现了。
    如果错误是未声明的引用，那就是找不到函数的原型，解决办法这里就不细致说了，
    通常是相关的头文件未包含

    指定原因就好办了，既然知道是缺少了函数的具体实现，
    那么就给它这个函数的实现就好了。
    比如上面的例子，是因为缺失了dlopen、dlsym、dlerror、dlclose这些函数的实现，
    这几个函数是用于加载动态链接库的，编译的时候需要添加-ldl来使用dl库
    (这是静态库，在系统目录下/usr/lib/i386-linux-gnu/libdl.a、
    /usr/lib/x86_64-linux-gnu/libdl.a)。
    但是看上面编译的时候是有添加-ldl选项的，那么为什么不行呢？

    这个主要的原因是gcc编译的时候，各个文件依赖顺序的问题。
    在gcc编译的时候，如果文件a依赖于文件b，那么编译的时候必须把a放前面，b放后面。
    例如:在main.c中使用了pthread库相关函数，那么编译的时候必须是main.c在前，-lpthread在后。gcc main.c -lpthread -o a.out。
    上面出现问题的原因就是引入库的顺序在前面了，将其放置在后面即可了。
    g++ -o spider  bloomfilter.o confparser.o crc32.o dso.o hashs.o md5.o qstring.o sha1.o socket.o spider.o threads.o url.o    -rdynamic -lpthread -levent -lcrypt -ldl

2. eclipse gcc command:
    df-console:
g++ -L"../../../DFVisionConsole_Common/x86-linux/lib" -o "../../../DFVisionConsole/x86-linux/bin/DFVisionConsole"  ./src_main/main.o  ./df_util.o ./df_util_sys.o ./dfconsole_global_definition.o ./dfconsole_main.o   -lopencv_imgproc -lopencv_calib3d -lopencv_contrib -lopencv_core -lopencv_features2d -lopencv_flann -lopencv_gpu -lopencv_highgui -lopencv_legacy -lopencv_ml -lopencv_nonfree -lopencv_objdetect -lopencv_ocl -lopencv_photo -lopencv_stitching -lopencv_superres -lopencv_ts -lopencv_video -lopencv_videostab -ldl
Finished building target: ../../../DFVisionConsole/x86-linux/bin/DFVisionConsole
    test:
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"main.d" -MT"main.d" -o "main.o" "../main.cpp"
2016-09-19 一 10:13 上午
1. package libxml to operator xml
2016-09-21 三 10:01 上午
解决黄金模板比对bug
----------------------------------------------------------

----------------------weekly work--------------------------
----------------------------------------------------------
